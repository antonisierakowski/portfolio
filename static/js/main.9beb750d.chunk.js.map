{"version":3,"sources":["images/portrait.png","components/Header.js","components/DropdownMenu.js","components/LandingPage.js","components/AboutMe.js","components/Skills.js","components/Projects.js","components/Contact.js","components/Footer.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Header","Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","menuClickHandler","setState","prevstate","displayDropdown","state","position","_this2","window","addEventListener","event","pageYOffset","document","getElementById","clientHeight","console","log","positon","react_default","a","createElement","id","style","className","onClick","LandingPage","href","AboutMe","concat","portrait","Skills","Projects","Contact","Footer","App","LandingPage_LandingPage","Header_Header","AboutMe_AboutMe","Skills_Skills","Projects_Projects","Contact_Contact","Footer_Footer","Boolean","location","hostname","match","ReactDOM","render","src_components_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"iFAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,mXCKnBC,qBCDqBC,wBDEzC,SAAAD,EAAYE,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAN,IAClBG,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAJ,GAAAS,KAAAH,KAAMJ,KAOPQ,iBAAmB,WAClBP,EAAKQ,SAAU,SAAAC,GACd,MAAO,CAACC,iBAAkBD,EAAUC,oBARrCV,EAAKW,MAAQ,CACZD,iBAAiB,EACjBE,SAAU,UAJOZ,mFAcC,IAAAa,EAAAV,KACnBW,OAAOC,iBAAiB,SAAU,SAACC,GAC9BF,OAAOG,aAAeC,SAASC,eAAe,eAAeC,aAChEP,EAAKL,SAAS,CACbI,SAAU,UAIXC,EAAKL,SAAS,CACbI,SAAU,gDASb,OADAS,QAAQC,IAAInB,KAAKoB,SAEhBC,EAAAC,EAAAC,cAAA,WAASC,GAAG,SAASC,MAAQ,CAAEhB,SAAUT,KAAKQ,MAAMC,WACnDY,EAAAC,EAAAC,cAAA,OAAKG,UAAU,kBACdL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,YACdL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,cAGfL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,cACdL,EAAAC,EAAAC,cAAA,KAAGG,UAAU,oBAAoBC,QAAS3B,KAAKI,8BAzClBT,cEDfiC,0LAEnB,OACEP,EAAAC,EAAAC,cAAA,OAAKC,GAAG,eACNH,EAAAC,EAAAC,cAAA,OAAKG,UAAU,aACbL,EAAAC,EAAAC,cAAA,8BAAqBF,EAAAC,EAAAC,cAAA,KAAGG,UAAU,cAAb,sBAArB,uCACAL,EAAAC,EAAAC,cAAA,KAAGM,KAAK,YAAWR,EAAAC,EAAAC,cAAA,OAAKG,UAAU,oBAAf,iBAAgDL,EAAAC,EAAAC,cAAA,KAAGG,UAAU,6CAN/C/B,sCCApBmC,mLAGH,OAAAC,OAASC,IAAT,KAMhB,OACEX,EAAAC,EAAAC,cAAA,OAAKC,GAAG,WACPH,EAAAC,EAAAC,cAAA,OAAKG,UAAU,kBACdL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,YAAf,iBAZ+B/B,aCAhBsC,0LAEjB,OACIZ,EAAAC,EAAAC,cAAA,OAAKC,GAAG,kBAHoB7B,cCAfuC,0LAEjB,OACIb,EAAAC,EAAAC,cAAA,OAAKC,GAAG,oBAHsB7B,cCAjBwC,0LAEjB,OACId,EAAAC,EAAAC,cAAA,OAAKC,GAAG,mBAHqB7B,cCAhByC,0LAEjB,OACIf,EAAAC,EAAAC,cAAA,OAAKC,GAAG,kBAHoB7B,cCsBrB0C,mLAdb,OACChB,EAAAC,EAAAC,cAAA,OAAKG,UAAU,OACdL,EAAAC,EAAAC,cAACe,EAAD,MACAjB,EAAAC,EAAAC,cAACgB,EAAD,MACAlB,EAAAC,EAAAC,cAACiB,EAAD,MACAnB,EAAAC,EAAAC,cAACkB,EAAD,MACApB,EAAAC,EAAAC,cAACmB,EAAD,MACArB,EAAAC,EAAAC,cAACoB,EAAD,MACAtB,EAAAC,EAAAC,cAACqB,EAAD,cAVcjD,aCEEkD,QACW,cAA7BlC,OAAOmC,SAASC,UAEe,UAA7BpC,OAAOmC,SAASC,UAEhBpC,OAAOmC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO7B,EAAAC,EAAAC,cAAC4B,EAAD,MAASpC,SAASC,eAAe,SD2H3C,kBAAmBoC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.9beb750d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/portrait.f466122f.png\";","import React, { Component } from 'react';\nimport './Header.scss';\nimport DropdownMenu from './DropdownMenu';\n\n\nexport default class Header extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tdisplayDropdown: false,\n\t\t\tposition: 'static'\n\t\t}\n\t}\n\n\tmenuClickHandler = () => {\n\t\tthis.setState( prevstate => {\n\t\t\treturn {displayDropdown: !prevstate.displayDropdown};\n\t\t})\n\t}\n\n\tcomponentDidMount() {\n\t\twindow.addEventListener('scroll', (event) => {\n\t\t\tif (window.pageYOffset >= document.getElementById('landingPage').clientHeight) {\n\t\t\t\tthis.setState({\n\t\t\t\t\tposition: 'fixed',\n\t\t\t\t})\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.setState({\n\t\t\t\t\tposition: 'relative',\n\t\t\t\t})\n\t\t\t\t\n\t\t\t}\n\t\t});\n\t}\n\t\n\trender() {\n\t\tconsole.log(this.positon)\n\t\treturn (\n\t\t\t<section id='header' style={ { position: this.state.position, } }>\n\t\t\t\t<div className='center-wrapper'>\n\t\t\t\t\t<div className='contents'>\n\t\t\t\t\t\t<div className='left-side'>\n\t\t\t\t\t\t\t{/* <span>Antoni Sierakowski</span> */}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className='right-side'>\n\t\t\t\t\t\t\t<i className=\"fas fa-bars fa-lg\" onClick={this.menuClickHandler}></i>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t{/* {this.state.displayDropdown && <DropdownMenu />} */}\n\t\t\t\t</div>\n\t\t\t</section>\n\t\t);\n  \t}\n}\n\n\n","import React, { Component } from 'react';\nimport './DropdownMenu.scss';\n\n\nexport default class DropdownMenu extends Component {\n\tcomponentWillMount() {\n\t\tthis.dropdownClass = 'dropdown-menu hidden'\n\t}\n\n\trender() {\n\t\tthis.dropdownClass = 'dropdown-menu'\n\t\treturn (\n\t\t\t\t<div className={this.dropdownClass}>\n\t\t\t\t\t<ul>\n\t\t\t\t\t\t<li><a href='#landingPage'>MAIN</a></li>\n\t\t\t\t\t\t<li><a href='#aboutMe'>ABOUT ME</a></li>\n\t\t\t\t\t\t<li><a href='#skills'>MY SKILLS</a></li>\n\t\t\t\t\t\t<li><a href='#projects'>PROJECTS</a></li>\n\t\t\t\t\t\t<li><a href='#contact'>CONTACT</a></li>\n\t\t\t\t\t</ul>\n\t\t\t\t</div>\n\t\t);\n\t}\n}","import React, { Component } from 'react';\nimport './LandingPage.scss';\n\n\nexport default class LandingPage extends Component {\n\trender() {\n\t\treturn (\n\t\t\t\t<div id='landingPage'>\n\t\t\t\t\t\t<div className='container'>\n\t\t\t\t\t\t\t\t<span>Hi. My name is <p className='emphasized'>Antoni Sierakowski</p> and I'm a front-end web developer.</span>\n\t\t\t\t\t\t\t\t<a href='#aboutMe'><div className='view-more-button'>Show me more! <i className=\"fas fa-arrow-alt-circle-right\"></i></div></a>\n\t\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t);\n\t}\n}\n\n\n","import React, { Component } from 'react';\nimport './AboutMe.scss';\nimport portrait from '../images/portrait.png';\n\nexport default class AboutMe extends Component {\n\trender() {\n\t\tconst style = {\n\t\t\tbackgroundImage: `url(${portrait})`,\n\t\t\tbackgroundSize: 'cover',\n\t\t\tbackgroundPosition: 'center bottom',\n\t\t\tbackgroundRepeat: 'no-repeat',\n\t\t}\n\n\t\treturn (\n\t\t\t\t<div id='aboutMe'>\n\t\t\t\t\t<div className='center-wrapper'>\n\t\t\t\t\t\t<div className='contents'>\n\t\t\t\t\t\t\thejo\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t);\n\t}\n}","import React, { Component } from 'react';\nimport './Skills.scss';\n\n\nexport default class Skills extends Component {\n  render() {\n    return (\n        <div id='skills'>\n        </div>\n    );\n  }\n}","import React, { Component } from 'react';\nimport './Projects.scss';\n\n\nexport default class Projects extends Component {\n  render() {\n    return (\n        <div id='projects'>\n        </div>\n    );\n  }\n}","import React, { Component } from 'react';\nimport './Contact.scss';\n\n\nexport default class Contact extends Component {\n  render() {\n    return (\n        <div id='contact'>\n        </div>\n    );\n  }\n}","import React, { Component } from 'react';\nimport './Footer.scss';\n\n\nexport default class Footer extends Component {\n  render() {\n    return (\n        <div id='footer'>\n        </div>\n    );\n  }\n}","import React, { Component } from 'react';\nimport './App.scss';\nimport Header from './Header.js';\nimport LandingPage from './LandingPage';\nimport AboutMe from './AboutMe';\nimport Skills from './Skills';\nimport Projects from './Projects';\nimport Contact from './Contact';\nimport Footer from './Footer';\n\nclass App extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<LandingPage />\n\t\t\t\t<Header />\n\t\t\t\t<AboutMe />\n\t\t\t\t<Skills />\n\t\t\t\t<Projects />\n\t\t\t\t<Contact />\n\t\t\t\t<Footer />\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}